#include "Max7219.hpp"

void MAX7219::clear_disp(){
	std::vector<uint16_t> data;
	for(uint16_t i = Digit0; i <= Digit7; i = i + 0x0100){
		data.push_back(i);
	}
	multi_byte_write_SPI(data);
}

void MAX7219::send_char(){
	/*
	uint8_t Gulucuk[8] = {0x3C,0x42,0x95,0xA1,0xA1,0x95,0x42,0x3C};
	uint8_t Kalp[8] = {0x1C,0x3E,0x7E,0xFC,0xFC,0x7E,0x3E,0x1C};

	uint8_t A[8] = {0xFC,0xFE,0x13,0x13,0x13,0x13,0xFE,0xFC};
	uint8_t B[8] = {0xFF,0xFF,0x99,0x99,0x99,0x99,0xA5,0x42};
	uint8_t C[8] = {0x3C,0x42,0x81,0x81,0x81,0x81,0x00,0x00};
	uint8_t D[8] = {0xFF,0xFF,0x81,0x81,0x81,0x81,0x42,0x3C};
	uint8_t E[8] = {0xFF,0xFF,0x99,0x99,0x99,0x99,0x99,0x99};
	uint8_t F[8] = {0xFF,0xFF,0x19,0x19,0x19,0x19,0x19,0x19};
	uint8_t G[8] = {0x3C,0x42,0x81,0x81,0x91,0x91,0x72,0x00};
	uint8_t H[8] = {0xFF,0xFF,0x18,0x18,0x18,0x18,0xFF,0xFF};
	uint8_t I[8] = {0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00};
	uint8_t J[8] = {0x00,0x21,0x41,0xFF,0xFF,0x01,0x01,0x00};
	uint8_t K[8] = {0xFF,0xFF,0x18,0x24,0x42,0x81,0x00,0x00};
	uint8_t L[8] = {0xFF,0xFF,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0};
	uint8_t M[8] = {0xFF,0xFF,0x04,0x08,0x08,0x04,0xFF,0xFF};
	uint8_t N[8] = {0xFF,0xFF,0x04,0x08,0x10,0x20,0xFF,0xFF};
	uint8_t O[8] = {0x3C,0x42,0x81,0x81,0x81,0x81,0x42,0x3C};
	uint8_t P[8] = {0xFF,0xFF,0x11,0x11,0x11,0x11,0x09,0x06};
	uint8_t R[8] = {0xFF,0xFF,0x11,0x31,0x51,0x9E,0x00,0x00};
	uint8_t S[8] = {0x9F,0x99,0x99,0x99,0x99,0x99,0x99,0xF9};
	uint8_t T[8] = {0x03,0x03,0x03,0xFF,0xFF,0x03,0x03,0x03};
	uint8_t U[8] = {0xFC,0xFC,0xC1,0xC0,0xC0,0xC1,0xFC,0xFC};
	uint8_t V[8] = {0x03,0x0C,0x30,0x40,0x40,0x30,0x0C,0x03};
	uint8_t Y[8] = {0x01,0x02,0x04,0xF8,0xF8,0x04,0x02,0x01};
	uint8_t Z[8] = {0x81,0xC1,0xA1,0x91,0x89,0x85,0x83,0x81};

	for(uint8_t i = 1; i<9; i++){
		uint16_t data = (i<<8)+R[i-1];
		matrix.write_byte_SPI(data);
	}*/
}
